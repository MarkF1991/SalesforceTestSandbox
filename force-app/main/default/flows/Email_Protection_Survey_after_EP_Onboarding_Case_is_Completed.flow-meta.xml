<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <description>Send the survey to the primary contact</description>
        <name>Email_Primary_Contact</name>
        <label>Email Primary Contact</label>
        <locationX>275</locationX>
        <locationY>708</locationY>
        <actionName>Case.Email_Protection_post_implementation_survey</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Survey_Sent_Chatter</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Email_Protection_post_implementation_survey</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Email_Secondary</name>
        <label>Email Secondary</label>
        <locationX>143</locationX>
        <locationY>1140</locationY>
        <actionName>Case.Email_Protection_post_implementation_survey_secondary_contact</actionName>
        <actionType>emailAlert</actionType>
        <connector>
            <targetReference>Survey_Sent_Chatter_0</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Email_Protection_post_implementation_survey_secondary_contact</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Survey_Sent_Chatter</name>
        <label>Survey Sent Chatter</label>
        <locationX>275</locationX>
        <locationY>816</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>Update_Case_with_Survey_Sent_Date_Time</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>Email Protection survey was sent to {!$Record.Contact.Email}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Survey_Sent_Chatter_0</name>
        <label>Survey Sent Chatter</label>
        <locationX>143</locationX>
        <locationY>1248</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>Email Protection survey was sent to {!$Record.Secondary_Contact__r.Email}</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>55.0</apiVersion>
    <decisions>
        <description>Check that the triggering record has the correct record type</description>
        <name>Decision_Record_Type_Onboarding</name>
        <label>Decision - Record Type</label>
        <locationX>473</locationX>
        <locationY>384</locationY>
        <defaultConnectorLabel>Other Record Type</defaultConnectorLabel>
        <rules>
            <name>Onboarding</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>GetOnboardingRecordType.Id</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>GetContact</targetReference>
            </connector>
            <label>Onboarding</label>
        </rules>
    </decisions>
    <decisions>
        <name>Secondary_Exists</name>
        <label>Does a secondary contact exists?</label>
        <locationX>275</locationX>
        <locationY>1032</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Secondary_Contact__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Email_Secondary</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <description>PROD version - scheduled path changed to 1 month after, previously 14 days
4/5/2023 - stamp Date/Time into Survey Sent Date Time field</description>
    <environments>Default</environments>
    <interviewLabel>Email Protection Survey after EP Onboarding Case is Completed {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Case - Email Protection Survey after EP Onboarding Case is Completed</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <description>Get related account of triggering case</description>
        <name>GetAccount</name>
        <label>GetAccount</label>
        <locationX>275</locationX>
        <locationY>600</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Email_Primary_Contact</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>GetContact from Case</description>
        <name>GetContact</name>
        <label>GetContact</label>
        <locationX>275</locationX>
        <locationY>492</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>GetAccount</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Contact.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Contact</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <description>Case type is differentiated by record type, so to avoid hardcoding values in the flow entry we use a get records on the RecordType object</description>
        <name>GetOnboardingRecordType</name>
        <label>GetOnboardingRecordType</label>
        <locationX>473</locationX>
        <locationY>276</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Decision_Record_Type_Onboarding</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>SobjectType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Case</stringValue>
            </value>
        </filters>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Onboarding</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RecordType</object>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <description>Update Survey Sent Date field</description>
        <name>Update_Case_with_Survey_Sent_Date_Time</name>
        <label>Update Case with Survey Sent Date/Time</label>
        <locationX>275</locationX>
        <locationY>924</locationY>
        <connector>
            <targetReference>Secondary_Exists</targetReference>
        </connector>
        <inputAssignments>
            <field>Survey_Sent_Date_Time__c</field>
            <value>
                <elementReference>$Flow.CurrentDateTime</elementReference>
            </value>
        </inputAssignments>
        <inputReference>$Record</inputReference>
    </recordUpdates>
    <start>
        <locationX>50</locationX>
        <locationY>0</locationY>
        <doesRequireRecordChangedToMeetCriteria>true</doesRequireRecordChangedToMeetCriteria>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Programme__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Email Protection</stringValue>
            </value>
        </filters>
        <filters>
            <field>Status</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Closed - Resolved</stringValue>
            </value>
        </filters>
        <object>Case</object>
        <recordTriggerType>Update</recordTriggerType>
        <scheduledPaths>
            <name>X14_Days_after_Case_Closed</name>
            <connector>
                <targetReference>GetOnboardingRecordType</targetReference>
            </connector>
            <label>1 Month after Case Closed</label>
            <offsetNumber>1</offsetNumber>
            <offsetUnit>Months</offsetUnit>
            <timeSource>RecordTriggerEvent</timeSource>
        </scheduledPaths>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
</Flow>
