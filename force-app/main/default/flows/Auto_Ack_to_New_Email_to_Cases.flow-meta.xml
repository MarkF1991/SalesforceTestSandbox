<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Ack_Email_Send</name>
        <label>Ack Email Send</label>
        <locationX>1008</locationX>
        <locationY>11</locationY>
        <actionName>chatterPost</actionName>
        <actionType>chatterPost</actionType>
        <connector>
            <targetReference>Send_Ack_Email</targetReference>
        </connector>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>subjectNameOrId</name>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>text</name>
            <value>
                <stringValue>Auto response acknowledgment email has been sent to the case contact</stringValue>
            </value>
        </inputParameters>
        <inputParameters>
            <name>visibility</name>
            <value>
                <stringValue>internalUsers</stringValue>
            </value>
        </inputParameters>
        <nameSegment>chatterPost</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Send_Ack_Email</name>
        <label>Send Ack</label>
        <locationX>1145</locationX>
        <locationY>11</locationY>
        <actionName>Case.Email_Customer_Email_To_Case_Acknowledgement</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Email_Customer_Email_To_Case_Acknowledgement</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <decisions>
        <name>EVAL_Email</name>
        <label>EVAL Email</label>
        <locationX>649</locationX>
        <locationY>14</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>No_Send_Ack</name>
            <conditionLogic>or</conditionLogic>
            <conditions>
                <leftValueReference>sObjCase.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>@n4l.co.nz</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>@sparkdigital.co.nz</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.SuppliedEmail</leftValueReference>
                <operator>Contains</operator>
                <rightValue>
                    <stringValue>@sditsm.co.nz</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.SuppliedEmail</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>svc_servicenowtestimap@spark.co.nz</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>svc_servicenowimap@spark.co.nz</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>ticket.logging@tts.co.nz</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.SuppliedEmail</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>servicenow@service-now.spark.co.nz</stringValue>
                </rightValue>
            </conditions>
            <label>No Send Ack</label>
        </rules>
        <rules>
            <name>Send_Ack</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>IgnoreSenderAddress</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Send</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.Origin</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Support Hub Submission</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Ack_Email_Send</targetReference>
            </connector>
            <label>Send Ack</label>
        </rules>
    </decisions>
    <formulas>
        <name>IgnoreSenderAddress</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!WebMail},&quot;@sditsm.co.nz&quot;),&quot;Ignore&quot;,IF(CONTAINS({!WebMail},&quot;@n4l.co.nz&quot;),&quot;Ignore&quot;,IF(CONTAINS({!WebMail},&quot;@cisco.com&quot;),&quot;Ignore&quot;,IF(CONTAINS({!WebMail},&quot;@spark.co.nz&quot;),&quot;Ignore&quot;,IF(CONTAINS({!WebMail},&quot;@feedback.spark.co.nz&quot;),&quot;Ignore&quot;,IF(CONTAINS({!WebMail},&quot;@sparkdigital.co.nz&quot;),&quot;Ignore&quot;,&quot;Send&quot;))))))</expression>
    </formulas>
    <interviewLabel>Auto Ack-to-New Email to Cases {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Auto Ack-to-New Email to Cases</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Case</name>
        <label>Case</label>
        <locationX>389</locationX>
        <locationY>12</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <object>Case</object>
        <outputReference>sObjCase</outputReference>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>CaseNumber</queriedFields>
        <queriedFields>Id</queriedFields>
        <queriedFields>IsClosed</queriedFields>
        <queriedFields>ContactId</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>Origin</queriedFields>
        <queriedFields>SuppliedEmail</queriedFields>
        <queriedFields>CreatedById</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>User</name>
        <label>User</label>
        <locationX>520</locationX>
        <locationY>11</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>EVAL_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>sObjCase.CreatedById</elementReference>
            </value>
        </filters>
        <object>User</object>
        <outputReference>sObjUser</outputReference>
        <queriedFields>UserType</queriedFields>
    </recordLookups>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Case</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>sObjCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>sObjCasesEmail</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>EmailMessage</objectType>
    </variables>
    <variables>
        <name>sObjContact</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Contact</objectType>
    </variables>
    <variables>
        <name>sObjUser</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>User</objectType>
    </variables>
    <variables>
        <name>WebMail</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
</Flow>
