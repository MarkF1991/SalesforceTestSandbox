<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Email_received</name>
        <label>Email received</label>
        <locationX>314</locationX>
        <locationY>638</locationY>
        <actionName>Case.Soc_email_to_update_close_cases</actionName>
        <actionType>emailAlert</actionType>
        <flowTransactionModel>CurrentTransaction</flowTransactionModel>
        <inputParameters>
            <name>SObjectRowId</name>
            <value>
                <elementReference>sObjCase.Id</elementReference>
            </value>
        </inputParameters>
        <nameSegment>Case.Soc_email_to_update_close_cases</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>49.0</apiVersion>
    <decisions>
        <name>EVAL_Email</name>
        <label>EVAL Email</label>
        <locationX>314</locationX>
        <locationY>398</locationY>
        <defaultConnectorLabel>[Default Outcome]</defaultConnectorLabel>
        <rules>
            <name>Create_New_Case</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>sObjCase.IsClosed</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>IgnoreSenderAddress</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Ignore</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.RecordTypeId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>0125m0000004MQMAA2</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Case</targetReference>
            </connector>
            <label>Create New Case</label>
        </rules>
        <rules>
            <name>Update_case_for_SOC_Incident</name>
            <conditionLogic>1 AND (2 OR 3)</conditionLogic>
            <conditions>
                <leftValueReference>sObjCase.RecordTypeId</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>0125m0000004MQMAA2</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed - Resolved</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>sObjCase.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Closed - Other</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_closed_case</targetReference>
            </connector>
            <label>Update case for SOC Incident</label>
        </rules>
    </decisions>
    <description>v6: remove hard coded url reference after instance migration
previous active version: v5

Main Description : Automated flow triggered off field update via workflow, which is the detected via Process Builder to act as trigger to flow</description>
    <environments>Default</environments>
    <formulas>
        <name>EmailSubject</name>
        <dataType>String</dataType>
        <expression>LEFT({!sObjCasesEmail.Subject},255)</expression>
    </formulas>
    <formulas>
        <name>IgnoreSenderAddress</name>
        <dataType>String</dataType>
        <expression>IF(CONTAINS({!sObjCasesEmail.FromAddress},&quot;@sditsm.co.nz&quot;),&quot;Ignore&quot;,IF(CONTAINS({!sObjCasesEmail.FromAddress},&quot;@n4l.co.nz&quot;),&quot;Ignore&quot;,IF(CONTAINS({!sObjCasesEmail.FromAddress},&quot;@cisco.com&quot;),&quot;Ignore&quot;,IF(CONTAINS({!sObjCasesEmail.FromAddress},&quot;@spark.co.nz&quot;),&quot;Ignore&quot;,IF(CONTAINS({!sObjCasesEmail.FromAddress},&quot;@feedback.spark.co.nz&quot;),&quot;Ignore&quot;,IF(CONTAINS({!sObjCasesEmail.FromAddress},&quot;@sparkdigital.co.nz&quot;),&quot;Ignore&quot;,&quot;Create&quot;))))))</expression>
    </formulas>
    <interviewLabel>Email-to-Closed Cases {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Email-to-Closed Cases</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Create_Case</name>
        <label>Create Case</label>
        <locationX>50</locationX>
        <locationY>518</locationY>
        <assignRecordIdToReference>newCase</assignRecordIdToReference>
        <connector>
            <targetReference>Closed_Case</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>sObjCase.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ContactId</field>
            <value>
                <elementReference>sObjCase.ContactId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Description</field>
            <value>
                <elementReference>New_Description</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Origin</field>
            <value>
                <stringValue>Email</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OwnerId</field>
            <value>
                <stringValue>00G90000001a9bREAQ</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Priority</field>
            <value>
                <stringValue>P4</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RecordTypeId</field>
            <value>
                <stringValue>01290000000TNWUAA4</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>New</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>Subject</field>
            <value>
                <elementReference>EmailSubject</elementReference>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordCreates>
    <recordLookups>
        <name>Case</name>
        <label>Case</label>
        <locationX>314</locationX>
        <locationY>158</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>IncomingEmail</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <object>Case</object>
        <outputReference>sObjCase</outputReference>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>CaseNumber</queriedFields>
        <queriedFields>Case_Category__c</queriedFields>
        <queriedFields>ContactId</queriedFields>
        <queriedFields>Id</queriedFields>
        <queriedFields>IsClosed</queriedFields>
        <queriedFields>Product_Category__c</queriedFields>
        <queriedFields>RecordTypeId</queriedFields>
        <queriedFields>Spark_Request_Note__c</queriedFields>
        <queriedFields>Spark_Service_Request_Type__c</queriedFields>
        <queriedFields>Status</queriedFields>
        <queriedFields>Trigger_Submit_Spark__c</queriedFields>
        <queriedFields>Type</queriedFields>
        <queriedFields>Spark_Service_Desk_Ref__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>IncomingEmail</name>
        <label>IncomingEmail</label>
        <locationX>314</locationX>
        <locationY>278</locationY>
        <assignNullValuesIfNoRecordsFound>true</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>EVAL_Email</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>ParentId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <object>EmailMessage</object>
        <outputReference>sObjCasesEmail</outputReference>
        <queriedFields>FromAddress</queriedFields>
        <queriedFields>Incoming</queriedFields>
        <queriedFields>MessageDate</queriedFields>
        <queriedFields>Subject</queriedFields>
        <queriedFields>TextBody</queriedFields>
        <queriedFields>ThreadIdentifier</queriedFields>
        <queriedFields>Id</queriedFields>
        <queriedFields>ParentId</queriedFields>
        <sortField>CreatedDate</sortField>
        <sortOrder>Desc</sortOrder>
    </recordLookups>
    <recordUpdates>
        <name>Closed_Case</name>
        <label>Closed Case</label>
        <locationX>50</locationX>
        <locationY>638</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Email_to_Closed_Case__c</field>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <recordUpdates>
        <name>Update_closed_case</name>
        <label>Update closed case</label>
        <locationX>314</locationX>
        <locationY>518</locationY>
        <connector>
            <targetReference>Email_received</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CaseId</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Status</field>
            <value>
                <stringValue>Under Action</stringValue>
            </value>
        </inputAssignments>
        <object>Case</object>
    </recordUpdates>
    <start>
        <locationX>188</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Case</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <textTemplates>
        <name>New_Description</name>
        <isViewedAsPlainText>false</isViewedAsPlainText>
        <text>Email-to-Closed Case - {!sObjCase.CaseNumber}
https://n4l.lightning.force.com/{!sObjCase.Id}

{!sObjCasesEmail.TextBody}</text>
    </textTemplates>
    <variables>
        <name>CaseId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>MessageId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>newCase</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <value>
            <stringValue></stringValue>
        </value>
    </variables>
    <variables>
        <name>sObjCase</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>Case</objectType>
    </variables>
    <variables>
        <name>sObjCasesEmail</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>EmailMessage</objectType>
    </variables>
</Flow>
